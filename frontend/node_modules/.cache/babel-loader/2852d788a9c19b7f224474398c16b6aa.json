{"ast":null,"code":"var _jsxFileName = \"/Users/aleenah/Desktop/contact-app/frontend/src/context/ContactsCrudContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport api from \"../api/contacts\";\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contactsCrudContext = /*#__PURE__*/createContext();\nexport function ContactsCrudContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [searchTerm, setSearchTerm] = useState([]);\n  const [contacts, setContacts] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n\n  const addContactHandler = async contact => {\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? { ...response.data\n      } : contact;\n    }));\n  };\n\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        return Object.values(contact).join(\"\").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n\n  const value = {\n    contacts,\n    SearchResults,\n    SearchTerm,\n    retrieveContacts,\n    removeContactHandler,\n    addContactHandler,\n    updateContactHandler,\n    searchHandler\n  };\n  return /*#__PURE__*/_jsxDEV(contactsCrudContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ContactsCrudContextProvider, \"44LzeTuqEmsvU/1N3PVRNanQVC8=\");\n\n_c = ContactsCrudContextProvider;\nexport function useContactsCrud() {\n  _s2();\n\n  return useContext(contactsCrudContext);\n}\n\n_s2(useContactsCrud, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsCrudContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","api","v4","uuid","contactsCrudContext","ContactsCrudContextProvider","children","searchTerm","setSearchTerm","contacts","setContacts","searchResults","setSearchResults","retrieveContacts","response","get","data","addContactHandler","contact","request","id","post","removeContactHandler","delete","newContactList","filter","updateContactHandler","put","map","searchHandler","Object","values","join","toLowerCase","includes","value","SearchResults","SearchTerm","useContactsCrud"],"sources":["/Users/aleenah/Desktop/contact-app/frontend/src/context/ContactsCrudContext.js"],"sourcesContent":["import {createContext, useContext, useState} from 'react';\nimport api from \"../api/contacts\";\nimport { v4 as uuid } from 'uuid';\n\nconst contactsCrudContext = createContext();\n\nexport function ContactsCrudContextProvider({children}) {\n    const [searchTerm, setSearchTerm] = useState([])\n    const [contacts, setContacts] = useState([]);\n    const [searchResults, setSearchResults] = useState([]);\n\n    \n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    } \n  };\n\n  const addContactHandler = async (contact) => {\n    const request = {\n      id: uuid(),\n      ...contact,\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n\n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if(searchTerm !== \"\") {\n       const newContactList = contacts.filter((contact) => {\n         return Object.values(contact).join(\"\").toLowerCase().includes(searchTerm.toLowerCase())\n       });\n       setSearchResults(newContactList);\n    }\n    else {\n      setSearchResults(contacts);\n    }\n  } \n\nconst value =  {\n    contacts,\n    SearchResults,\n    SearchTerm,\n    retrieveContacts,\n    removeContactHandler,\n    addContactHandler,\n    updateContactHandler,\n    searchHandler,\n}\n\n    return (\n        <contactsCrudContext.Provider value={ value }>\n            {children}\n        </contactsCrudContext.Provider>\n    )\n}\n\nexport function useContactsCrud() {\n    return useContext(contactsCrudContext)\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}