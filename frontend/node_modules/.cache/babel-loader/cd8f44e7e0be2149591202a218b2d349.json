{"ast":null,"code":"var _jsxFileName = \"/Users/aleenah/Desktop/contact-app/frontend/src/context/ContactsCrudContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState } from 'react';\nimport api from \"../api/contacts\";\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contactsCrudContext = /*#__PURE__*/createContext();\nexport function ContactsCrudContextProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]); //RetrieveContacts\n\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n\n    if (response.data) {\n      setContacts(response.data);\n    }\n  };\n\n  const addContactHandler = async contact => {\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async id => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = async contact => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const {\n      id\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? { ...response.data\n      } : contact;\n    }));\n  };\n\n  const searchHandler = searchTerm => {\n    setText(searchTerm);\n\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        console.log(contact);\n        return Object.values(contact).join(\" \").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    } else {\n      setSearchResults(contacts);\n    }\n  };\n\n  const value = {\n    contacts,\n    retrieveContacts,\n    removeContactHandler,\n    addContactHandler,\n    updateContactHandler\n  };\n  return /*#__PURE__*/_jsxDEV(contactCrudContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ContactsCrudContextProvider, \"mTpHIvxo9bIDoZ1NixzN1t0nIdc=\");\n\n_c = ContactsCrudContextProvider;\nexport function useContactsCrud() {\n  _s2();\n\n  return useContext(contactCrudContext);\n}\n\n_s2(useContactsCrud, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsCrudContextProvider\");","map":{"version":3,"names":["createContext","useContext","useState","api","v4","uuid","contactsCrudContext","ContactsCrudContextProvider","children","contacts","setContacts","contact","setContact","text","setText","searchResults","setSearchResults","retrieveContacts","response","get","data","addContactHandler","request","id","post","removeContactHandler","delete","newContactList","filter","updateContactHandler","put","map","searchHandler","searchTerm","console","log","Object","values","join","toLowerCase","includes","value","useContactsCrud","contactCrudContext"],"sources":["/Users/aleenah/Desktop/contact-app/frontend/src/context/ContactsCrudContext.js"],"sourcesContent":["import {createContext, useContext, useState} from 'react';\nimport api from \"../api/contacts\";\nimport { v4 as uuid } from 'uuid';\n\nconst contactsCrudContext = createContext();\n\nexport function ContactsCrudContextProvider({children}) {\n    const [contacts, setContacts] = useState([]);\n    const [contact, setContact] = useState([]);\n    const [text, setText] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n\n    //RetrieveContacts\n  const retrieveContacts = async () => {\n    const response = await api.get(\"/contacts\");\n    if (response.data) {\n      setContacts(response.data);\n    } \n  };\n\n  const addContactHandler = async (contact) => {\n    const request = {\n      id: uuid(),\n      ...contact,\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const removeContactHandler = async (id) => {\n    await api.delete(`/contacts/${id}`);\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id;\n    });\n\n    setContacts(newContactList);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(`/contacts/${contact.id}`, contact);\n    const { id } = response.data;\n    setContacts(\n      contacts.map((contact) => {\n        return contact.id === id ? { ...response.data } : contact;\n      })\n    );\n  };\n\n  const searchHandler = (searchTerm) => {\n    setText(searchTerm);\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter((contact) => {\n        console.log(contact);\n        return Object.values(contact)\n          .join(\" \")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setSearchResults(newContactList);\n    }else {\n      setSearchResults(contacts);\n    }\n  };\n    const value =  {\n        contacts,\n        retrieveContacts,\n        removeContactHandler,\n        addContactHandler,\n        updateContactHandler\n    }\n    return <contactCrudContext.Provider value = {value}>\n         {children}\n    </contactCrudContext.Provider>\n}\n\nexport function useContactsCrud() {\n    return useContext(contactCrudContext);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}