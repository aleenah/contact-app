{"ast":null,"code":"var _jsxFileName = \"/Users/aleenah/Desktop/contact-app/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useInsertionEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport './App.css';\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from './ContactDetail';\nimport { ContactsCrudContextProvider } from '../context/ContactsCrudContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState(JSON.parse(localStorage.getItem(\"contacts\")));\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]); // const retrieveContacts = async () => {\n  //   const response = await api.get(\"/contacts\");\n  //   return response.data;\n  // }\n\n  const addContactHandler = async contact => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contact\n    };\n    const response = await api.post(\"/contacts\", request);\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async contact => {\n    const response = await api.put(\"/contacts/${contact.id}\", contact);\n    const {\n      id,\n      name,\n      email\n    } = response.data;\n    setContacts(contacts.map(contact => {\n      return contact.id === id ? { ...response.data\n      } : contact;\n    }));\n  };\n\n  const removeContactHandler = async id => {\n    await api.delete(\"/contacts/${id}\");\n    const newContactList = contacts.filter(contact => {\n      return contact.id !== id;\n    });\n    setContacts(newContactList);\n  };\n\n  const searchHandler = searchTerm => {\n    setSearchTerm(searchTerm);\n\n    if (searchTerm !== \"\") {\n      const newContactList = contacts.filter(contact => {\n        return Object.values(contact);\n      });\n    }\n  };\n\n  useEffect(() => {\n    // const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retrieveContacts) setContacts(retrieveContacts);\n    const getAllContacts = async () => {\n      const allContacts = await retrieveContacts();\n      if (allContacts) setContacts(allContacts);\n    };\n\n    getAllContacts();\n  }, []);\n  useEffect(() => {//localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ui container\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContactsCrudContextProvider, {\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(ContactList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), \"term=\", searchTerm, \"searchKeyword=\", searchHandler, /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/add\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(AddContact, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit\",\n            exact: true,\n            element: /*#__PURE__*/_jsxDEV(EditContact, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/contact/:id\",\n            element: /*#__PURE__*/_jsxDEV(ContactDetail, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5Zhmp3xmrnxgbMtuDi5Ofh9VWDQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useInsertionEffect","BrowserRouter","Router","Route","Routes","v4","uuid","Header","AddContact","ContactList","ContactDetail","ContactsCrudContextProvider","App","LOCAL_STORAGE_KEY","contacts","setContacts","JSON","parse","localStorage","getItem","searchTerm","setSearchTerm","searchResults","setSearchResults","addContactHandler","contact","console","log","request","id","response","api","post","data","updateContactHandler","put","name","email","map","removeContactHandler","delete","newContactList","filter","searchHandler","Object","values","getAllContacts","allContacts","retrieveContacts"],"sources":["/Users/aleenah/Desktop/contact-app/frontend/src/components/App.js"],"sourcesContent":["import React, {useState, useEffect, useInsertionEffect} from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { v4 as uuid } from 'uuid';\nimport './App.css';\nimport Header from \"./Header\";\nimport AddContact from \"./AddContact\";\nimport ContactList from \"./ContactList\";\nimport ContactDetail from './ContactDetail';\nimport { ContactsCrudContextProvider } from '../context/ContactsCrudContext';\n\nfunction App() {\n  const LOCAL_STORAGE_KEY = \"contacts\";\n  const [contacts, setContacts] = useState(JSON.parse(localStorage.getItem(\"contacts\")));\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n\n  // const retrieveContacts = async () => {\n  //   const response = await api.get(\"/contacts\");\n  //   return response.data;\n  // }\n\n  const addContactHandler = async (contact) => {\n    console.log(contact);\n    const request = {\n      id: uuid(),\n      ...contact\n    }\n\n    const response = await api.post(\"/contacts\", request)\n    setContacts([...contacts, response.data]);\n  };\n\n  const updateContactHandler = async (contact) => {\n    const response = await api.put(\"/contacts/${contact.id}\", contact)\n    const { id, name, email} = response.data;\n    setContacts(\n      contacts.map((contact) => {\n      return contact.id === id ? {...response.data} : contact\n    }));\n  }\n\n  const removeContactHandler = async (id) => {\n    await api.delete(\"/contacts/${id}\");\n    const newContactList = contacts.filter((contact) => {\n      return contact.id !== id; \n    });\n\n    setContacts(newContactList);\n  };\n\n  const searchHandler = (searchTerm) => {\n    setSearchTerm(searchTerm);\n    if(searchTerm !== \"\") {\n       const newContactList = contacts.filter((contact) => {\n         return Object.values(contact)\n       })\n    }\n  } \n\n  useEffect(() => {\n    // const retrieveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    // if (retrieveContacts) setContacts(retrieveContacts);\n\n    const getAllContacts = async() => {\n      const allContacts = await retrieveContacts();\n      if(allContacts) setContacts(allContacts);\n    };\n\n    getAllContacts();\n  }, []);\n\n  useEffect(() => {\n    //localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\n  }, [contacts]);\n\n\n  return (\n    <div className=\"ui container\">\n      <Router>\n        <Header />\n        <ContactsCrudContextProvider>\n        <Routes>\n          <Route \n            path=\"/\" \n            exact \n            element={<ContactList/>} /> \n            term={searchTerm}\n            searchKeyword={searchHandler}\n\n          <Route \n            path=\"/add\" \n            exact \n            element={<AddContact />} />\n\n          <Route \n            path=\"/edit\" \n            exact \n            element={<EditContact />} />\n\n          <Route path=\"/contact/:id\" element={<ContactDetail/>}/> \n        </Routes>\n        {/* <AddContact addContactHandler = {addContactHandler}/>\n        <ContactList contacts= {contacts} getContactId={removeContactHandler} /> */}\n        </ContactsCrudContextProvider>\n      </Router> \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}